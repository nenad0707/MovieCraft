@inject MovieService MovieService
@inject UserState UserState
@inject NavigationManager NavigationManager
@inject IToastService ToastService


<div class="action-buttons">
    <button class="btn action-buttons__button action-buttons__button--trailer" style="border-radius: @(ButtonBorderRadius)" @onclick="WatchTrailer" aria-label="Watch Trailer" data-tooltip="Watch Trailer">
        <i class="bx bx-play-circle"></i>
        <span>Trailer</span>
    </button>
    <button class="btn action-buttons__button action-buttons__button--favorite" style="border-radius: @(ButtonBorderRadius)" @onclick="AddToFavorites" aria-label="Add to Favorites" data-tooltip="Add to Favorites">
        <i class="bx bx-heart"></i>
        <span>Favorite</span>
    </button>
</div>

@code {
    [Parameter] 
    public int TmdbId { get; set; } 

    [Parameter] 
    public EventCallback<int> OnTrailerRequested { get; set; }

    [Parameter]
    public string ButtonBorderRadius { get; set; } = "5px";

    private void WatchTrailer()
    {
        if(OnTrailerRequested.HasDelegate)
        {
            OnTrailerRequested.InvokeAsync(TmdbId);
        }
    }

    private async void AddToFavorites()
    {
        if (UserState.CurrentUser == null)
        {
            NavigationManager.NavigateTo("authentication/login");
            return;
        }

        try
        {
            var result = await MovieService.AddToFavoritesAsync(TmdbId);

            if (result == "Movie added to favorites successfully.")
            {
                ToastService.ShowSuccess(result);
            }
            else if (result == "This movie is already in your favorites.")
            {
                ToastService.ShowError(result); 
            }
            else
            {
                ToastService.ShowError(result);
            }
        }
        catch (Exception)
        {
            ToastService.ShowError("Failed to add movie to favorites!");
        }
    }
}
