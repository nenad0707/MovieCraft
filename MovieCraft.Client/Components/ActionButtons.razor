@inject MovieService MovieService
@inject UserState UserState
@inject NavigationManager NavigationManager

@if (message != null)
{
    <div class="alert alert-info">@message</div>
}

<div class="action-buttons">
    <button class="btn action-buttons__button action-buttons__button--trailer" @onclick="WatchTrailer" aria-label="Watch Trailer" data-tooltip="Watch Trailer">
        <i class="bx bx-play-circle"></i>
        <span>Trailer</span>
    </button>
    <button class="btn action-buttons__button action-buttons__button--favorite" @onclick="AddToFavorites" aria-label="Add to Favorites" data-tooltip="Add to Favorites">
        <i class="bx bx-heart"></i>
        <span>Favorite</span>
    </button>
</div>



@code {
    private string? message;
    [Parameter] public int TmdbId { get; set; } 
  

    private void WatchTrailer()
    {
        // todo
    }

    private async void AddToFavorites()
    {
        if (UserState.CurrentUser == null)
        {
            NavigationManager.NavigateTo("authentication/login");
            return;
        }

        message = await MovieService.AddToFavorites(TmdbId);

        StateHasChanged();

        await Task.Delay(3000);
        message = null;
        StateHasChanged();
    }
}
